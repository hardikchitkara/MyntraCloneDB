{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Desktop\\\\MymyntraFrontend\\\\src\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./Login.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [currentView, setCurrentview] = useState(\"signUp\");\n  const [wrongpass, setWrongpass] = useState(false);\n  const [alreadyexist, setAlreadyexist] = useState(false);\n  let history = useHistory();\n\n  const Loggedin = async () => {\n    let loginUid;\n    let ans = await fetch(\"/usersData\").then(function (res) {\n      return res.json();\n    }).then(json => {\n      loginUid = json.uid;\n      return json;\n    });\n    let x = false;\n    ans.forEach(ele => {\n      console.log(ele.email + \" \" + ele.password + \" \" + email + \" \" + password);\n\n      if (email == ele.email && password == ele.password || email == \"\" || password == \"\") {\n        x = true; //already exist or not accepted\n      }\n    });\n\n    if (x == false) {\n      history.push({\n        pathname: \"/Myntra\",\n        state: {\n          uid: loginUid\n        }\n      });\n      const res = await fetch(\"/loggedInData\", {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          password: password,\n          uid: loginUid\n        })\n      });\n    } else {\n      setAlreadyexist(true);\n    }\n  };\n\n  const loginApprove = async () => {\n    let ans = await fetch(\"/usersData\").then(function (res) {\n      return res.json();\n    }).then(json => {\n      return json;\n    });\n    let x = false;\n    let loginUid;\n    ans.forEach(ele => {\n      // console.log(email+\" \"+password+\" \"+ele.email+\" \"+ele.password);\n      if (email == ele.email && password == ele.password) {\n        x = true;\n        loginUid = ele.uid;\n      }\n    }); //{pathname:\"/\",state:{uid:loginUid}}\n\n    if (x == true) {\n      history.push({\n        pathname: \"/Myntra\",\n        state: {\n          uid: loginUid\n        }\n      });\n\n      (async () => await fetch(\"/loginuid\", {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          uid: loginUid\n        })\n      }))();\n    } else {\n      setWrongpass(true);\n    }\n  };\n\n  let View = () => {\n    switch (currentView) {\n      case \"signUp\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formclass\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sign Up!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"username\",\n                  children: \"Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"username\",\n                  onChange: el => setName(el.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"email\",\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  id: \"email\",\n                  onChange: el => setEmail(el.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"password\",\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  id: \"password\",\n                  onChange: el => setPassword(el.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => Loggedin(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), alreadyexist == true && setTimeout(() => {\n            setAlreadyexist(false);\n          }, 2000) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Already existing email or Empty spaces, Try Another one......\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 88\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentview(\"logIn\"),\n            children: \"Have an Account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case \"logIn\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formclass\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Welcome Back!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"email\",\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"email\",\n                  onChange: el => setEmail(el.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"password\",\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  id: \"password\",\n                  onChange: el => setPassword(el.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => setCurrentview(\"PWReset\"),\n                  children: \"Forgot Password?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => loginApprove(),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), wrongpass == true && setTimeout(() => {\n            setWrongpass(false);\n          }, 2000) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Wrong pass, Try Again Please....\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 82\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentview(\"signUp\"),\n            children: \"Create an Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case \"PWReset\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formclass\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Password Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"A reset link will be sent to your inbox!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"email\",\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  id: \"email\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Send Reset Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => setCurrentview(\"logIn\"),\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"entry-page\",\n    children: View()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"771Tw1VdAPgV+A8JMi0+n0ui3+Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Win10/Desktop/MymyntraFrontend/src/Login.jsx"],"names":["React","useState","useHistory","Login","name","setName","email","setEmail","password","setPassword","currentView","setCurrentview","wrongpass","setWrongpass","alreadyexist","setAlreadyexist","history","Loggedin","loginUid","ans","fetch","then","res","json","uid","x","forEach","ele","console","log","push","pathname","state","method","headers","body","JSON","stringify","loginApprove","View","el","target","value","setTimeout"],"mappings":"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","sourcesContent":["\r\nimport React,{useState} from 'react';\r\nimport \"./Login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login=()=>{\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [currentView, setCurrentview] = useState(\"signUp\");\r\n  const [wrongpass, setWrongpass] = useState(false);\r\n  const [alreadyexist, setAlreadyexist] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const Loggedin=async()=>{\r\n\r\n    let loginUid;\r\n    let ans=await fetch(\"/usersData\")\r\n    .then(function (res) {\r\n      return res.json();\r\n    })\r\n    .then((json) => {\r\n      loginUid=json.uid;\r\n      return json;\r\n    });\r\n\r\n    let x=false;\r\n    \r\n    ans.forEach((ele)=>{\r\n      console.log(ele.email+\" \"+ele.password+\" \"+email+\" \"+password);\r\n      if((email==ele.email && password==ele.password)||(email==\"\")||(password==\"\"))\r\n      {\r\n        x=true; //already exist or not accepted\r\n      }\r\n    })\r\n\r\n    if(x==false)\r\n    {\r\n      history.push({pathname:\"/Myntra\",state:{uid:loginUid}});\r\n      const res=await fetch(\"/loggedInData\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Accept\":\"application/json\",\r\n          \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n            name:name,\r\n            email:email,\r\n            password:password,\r\n            uid:loginUid\r\n        })\r\n      })\r\n    }\r\n    else{\r\n      setAlreadyexist(true);\r\n    }\r\n    \r\n  }\r\n\r\n  const loginApprove=async()=>{\r\n    \r\n    let ans=await fetch(\"/usersData\")\r\n    .then(function (res) {\r\n      return res.json();\r\n    })\r\n    .then((json) => {\r\n      return json;\r\n    });\r\n\r\n    let x=false;\r\n    let loginUid;\r\n    ans.forEach((ele)=>{\r\n      // console.log(email+\" \"+password+\" \"+ele.email+\" \"+ele.password);\r\n      if(email==ele.email && password==ele.password)\r\n      {\r\n        x=true;\r\n        loginUid=ele.uid;\r\n      }\r\n    })\r\n    //{pathname:\"/\",state:{uid:loginUid}}\r\n    if(x==true){ \r\n      history.push({pathname:\"/Myntra\",state:{uid:loginUid}});\r\n      (async()=>await fetch(\"/loginuid\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Accept\":\"application/json\",\r\n          \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n            uid:loginUid\r\n        })\r\n      }))();\r\n    }\r\n    else{setWrongpass(true);}\r\n\r\n  }\r\n\r\n  let View = () => {\r\n    switch(currentView) {\r\n      case \"signUp\":\r\n        return (\r\n          <div className=\"formclass\">\r\n            <h2>Sign Up!</h2>\r\n            <fieldset>\r\n              <legend>Create Account</legend>\r\n              <ul>\r\n                <li>\r\n                  <label for=\"username\">Username:</label>\r\n                  <input  type=\"text\" id=\"username\" onChange={ (el) => setName(el.target.value)} required/>\r\n                </li>\r\n                <li>\r\n                  <label for=\"email\">Email:</label>\r\n                  <input type=\"email\" id=\"email\" onChange={ (el) => setEmail(el.target.value)} required/>\r\n                </li>\r\n                <li>\r\n                  <label for=\"password\">Password:</label>\r\n                  <input  type=\"password\" id=\"password\" onChange={ (el) => setPassword(el.target.value)} required/>\r\n                </li>\r\n              </ul>\r\n            </fieldset>\r\n            \r\n            \r\n            <button className=\"btn\" onClick={ () => Loggedin()}>Submit</button>\r\n            {alreadyexist==true && setTimeout(() => {setAlreadyexist(false)}, 2000) && <div>Already existing email or Empty spaces, Try Another one......</div>}\r\n            <button  onClick={ () => setCurrentview(\"logIn\")}>Have an Account?</button>\r\n          </div>\r\n        )\r\n        break\r\n      case \"logIn\":\r\n        return (\r\n          <div className=\"formclass\">\r\n            <h2>Welcome Back!</h2>\r\n            <fieldset>\r\n              <legend>Log In</legend>\r\n              <ul>\r\n                <li>\r\n                  <label for=\"email\">Email:</label>\r\n                  <input  type=\"text\" id=\"email\" onChange={ (el) => setEmail(el.target.value)} required/>\r\n                </li>\r\n                <li>\r\n                  <label for=\"password\">Password:</label>\r\n                  <input type=\"password\" id=\"password\" onChange={ (el) => setPassword(el.target.value)} required/>\r\n                </li>\r\n                <li>\r\n                  <i/>\r\n                  <a onClick={ () => setCurrentview(\"PWReset\")}>Forgot Password?</a>\r\n                </li>\r\n              </ul>\r\n            </fieldset>\r\n           \r\n            <button className=\"btn\" onClick={ () => loginApprove()}>Login</button>\r\n            {wrongpass==true && setTimeout(() => {setWrongpass(false)}, 2000) && <div>Wrong pass, Try Again Please....</div>}\r\n            <button onClick={ () => setCurrentview(\"signUp\")}>Create an Account</button>\r\n            \r\n          </div>\r\n        )\r\n        break;\r\n      case \"PWReset\":\r\n        return (\r\n          <div className=\"formclass\">\r\n          <h2>Reset Password</h2>\r\n          <fieldset>\r\n            <legend>Password Reset</legend>\r\n            <ul>\r\n              <li>\r\n                <em>A reset link will be sent to your inbox!</em>\r\n              </li>\r\n              <li>\r\n                <label for=\"email\">Email:</label>\r\n                <input type=\"email\" id=\"email\" required/>\r\n              </li>\r\n            </ul>\r\n          </fieldset>\r\n          <button>Send Reset Link</button>\r\n          <button type=\"submit\" onClick={ () => setCurrentview(\"logIn\")}>Go Back</button>\r\n        </div>\r\n        )\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"entry-page\">\r\n        {View()}\r\n    </div>\r\n  )\r\n}\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}